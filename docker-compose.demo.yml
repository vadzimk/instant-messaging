
services:
  backend:
    container_name: messaging_backend
    build:
        context: ./backend
        dockerfile: Dockerfile
    env_file:
      - ./backend/.env.demo
    expose: 
      - 8000
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  celery_worker:
    container_name: celery_worker
    build:
      context: ./backend
      dockerfile: Dockerfile # same as backend
    command: celery -A src.celery_app.worker.celery worker --loglevel=info
    env_file:
      - ./backend/.env.demo
    expose:
      - 8000
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  telegram_bot:
    container_name: telegram_bot
    build:
      context: ./telegram_bot
      dockerfile: Dockerfile
    expose:
      - 8003
    env_file:
      - ./telegram_bot/.env.demo
    depends_on:
      - backend


  postgres:
    image: postgres:15
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env.demo

  redis:
    image: redis
    expose:
      - 6379
    command: [ 'redis-server', '--appendonly', 'yes' ]
    restart: unless-stopped


  nginx:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: