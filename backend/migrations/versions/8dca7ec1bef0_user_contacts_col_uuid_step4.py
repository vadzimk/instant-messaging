"""user contacts col uuid, step4

Revision ID: 8dca7ec1bef0
Revises: 665d975cad0f
Create Date: 2024-10-26 22:12:18.945318

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '8dca7ec1bef0'
down_revision: Union[str, None] = '665d975cad0f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('contacts', 'contact_id')
    op.drop_column('contacts', 'user_id')
    op.drop_column('messages', 'id')
    op.drop_column('users', 'id')
    op.drop_column('messages', 'user_from_id')
    op.drop_column('messages', 'user_to_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    conn.execute(  # <-- new
        sa.text(("""
        DO $$
        BEGIN
            IF NOT EXISTS (SELECT 1 FROM pg_class WHERE relname = 'users_id_seq') THEN
                CREATE SEQUENCE users_id_seq;
            END IF;
    
            IF NOT EXISTS (SELECT 1 FROM pg_class WHERE relname = 'messages_id_seq') THEN
                CREATE SEQUENCE messages_id_seq;
            END IF;
    
            IF NOT EXISTS (SELECT 1 FROM pg_class WHERE relname = 'contacts_id_seq') THEN
                CREATE SEQUENCE contacts_id_seq;
            END IF;
        END $$;""")))
    op.add_column('users', sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"),
                                     autoincrement=True, nullable=False))
    op.add_column('messages',
                  sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('messages_id_seq'::regclass)"),
                            autoincrement=True, nullable=False))
    op.add_column('contacts',
                  sa.Column('user_id', sa.INTEGER(), server_default=sa.text("nextval('contacts_id_seq'::regclass)"),
                            autoincrement=False, nullable=False))
    op.add_column('contacts',
                  sa.Column('contact_id', sa.INTEGER(), server_default=sa.text("nextval('contacts_id_seq'::regclass)"),
                            autoincrement=False, nullable=False))
    op.add_column('messages', sa.Column('user_from_id', sa.INTEGER()))
    op.add_column('messages', sa.Column('user_to_id', sa.INTEGER()))
    # ### end Alembic commands ###
